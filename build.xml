<project name="NEO" default="dist" basedir=".">

	<property name="releasename" value="nengo-1.0" />
	<property name="base-ui" value="../simulator-ui" />
	<property name="src" value="${basedir}/src" />
	<property name="src-ui" value="${base-ui}/src" />	
	<property name="build" value="${basedir}/target" />
	<property name="classes" value="${build}/classes" />
	<property name="test-classes" value="${build}/test-classes" />
	<property name="docs" value="${build}/javadoc" />
	<property name="dist" value="${build}" />
	<property name="lib" value="${basedir}/lib" />
	<property name="lib-ui" value="${base-ui}/lib" />

	<path id="classpath">
		<pathelement path="${src}" />
		<pathelement location="${lib}/commons-lang-2.1.jar" /> 
		<pathelement location="${lib}/Jama-1.0.2.jar" /> 		
		<pathelement location="${lib}/junit.jar" /> 		
		<pathelement location="${lib}/jcommon-1.0.0.jar" /> 		
		<pathelement location="${lib}/jfreechart-1.0.1.jar" /> 
		<pathelement location="${lib}/jmatio.jar" /> 
		<pathelement location="${lib}/log4j-1.2.14.jar" /> 
		<pathelement location="${lib}/qdox-1.6.3.jar" /> 
		<pathelement location="${lib-ui}/jython.jar" /> 
		<pathelement location="${lib-ui}/jung-1.7.6.jar" /> 
		<pathelement location="${lib-ui}/piccolo.jar" /> 
		<pathelement location="${lib-ui}/piccolox.jar" /> 
		<pathelement location="${lib-ui}/commons-collections-3.2.jar" /> 
		<pathelement location="${lib-ui}/colt.jar" /> 
	</path>
	
	
	<!-- Creates JavaDoc documentation -->
	<target name="doc">
		<mkdir dir="${docs}"/>
		
	    <!-- Note: if this fails because of the source attribute, you need ant 1.4 -->
	    <javadoc packagenames="ca.neo.*"
	        source="1.5"
	        classpathref="classpath"
	        sourcepath="${src}/java/main"
	        destdir="${docs}"
	        windowtitle="NENGO Documentation"/>  
	</target>
	
	
	<!-- Compile main and test classes --> 
	<target name="compile">
		<mkdir dir="${classes}"/>
		<mkdir dir="${test-classes}"/>
		
	 	<javac source="1.5" srcdir="${src}/java/main" destdir="${classes}" includes="ca/neo/**" debug="true">
	        <classpath refid="classpath" />
	    </javac>

	 	<javac source="1.5" srcdir="${src}/java/test" destdir="${test-classes}" includes="ca/neo/**" debug="true">
	        <classpath refid="classpath" />
	 		<classpath>
	 			<pathelement path="${classes}" />
	 		</classpath>
	    </javac>
		
	 	<javac source="1.5" srcdir="${src-ui}/java/main:${src-ui}/java/piccoloX" destdir="${classes}" includes="ca/**" debug="true">
	        <classpath refid="classpath" />
	 		<classpath>
	 			<pathelement path="${classes}" />
	 		</classpath>
	    </javac>

	    <copy todir="${classes}/ca/neo/config">
	        <fileset dir="${src}/java/main/ca/neo/config">
	            <include name="*.txt"/>
	    	</fileset>
	    </copy>    

	    <copy todir="${classes}/ca/neo/config/ui">
	        <fileset dir="${src}/java/main/ca/neo/config/ui">
	            <include name="*.jpg"/>
	            <include name="*.JPG"/>
	            <include name="*.gif"/>
	            <include name="*.GIF"/>
	    	</fileset>
	    </copy>    

	</target>
	
	
	<!-- Creates JAR --> 
	<target name="jar" depends="compile">
		<jar jarfile="${dist}/${releasename}.jar" basedir="${classes}" />
	</target>

	<!-- Zips JAR and dependencies -->
	<target name="zip" depends="jar">
		<zip zipfile="${dist}/${releasename}.zip" basedir="${lib}" />
		<zip update="true" zipfile="${dist}/${releasename}.zip" basedir="${lib-ui}"/> 
		<zip update="true" zipfile="${dist}/${releasename}.zip" basedir="${dist}" includes="${releasename}.jar"/> 
	</target>
		
	<!-- Creates source, doc, and release zip files -->
	<target name="dist" depends="doc,jar,zip">
		<mkdir dir="${dist}"/>

	    <!-- Make source zip file -->
	    <zip zipfile="${dist}/${releasename}_source.zip" basedir="${src}/java/main" includes="ca/neo/**/*.java"/>

		<!-- Make doc zip file --> 
		<zip zipfile="${dist}/${releasename}_docs.zip" basedir="${docs}"/>	
		
	</target>
	
	
	<!-- Deletes all build products --> 
	<target name="clean">
		<delete><fileset dir="${classes}" /></delete>
		<delete><fileset dir="${test-classes}" /></delete>
		<delete><fileset dir="${docs}" /></delete>
	</target>
	
	
</project>